import { StrykerOptions } from 'stryker-api/core';
import StrictReporter from '../reporters/StrictReporter';
import InputFileCollection from './InputFileCollection';
import { Logger } from 'stryker-api/logging';
export default class InputFileResolver {
    private readonly log;
    private readonly reporter;
    private readonly mutatePatterns;
    private readonly filePatterns;
    static inject: ["logger", "options", "reporter"];
    constructor(log: Logger, { mutate, files }: StrykerOptions, reporter: StrictReporter);
    resolve(): Promise<InputFileCollection>;
    private resolveInputFiles;
    private resolveMutateFiles;
    /**
     * Takes a list of globbing patterns and expands them into files.
     * If a patterns starts with a `!`, it negates the pattern.
     * @param patterns The patterns to expand into files
     */
    private expand;
    private expandPattern;
    private resolveFilesUsingGit;
    private reportAllSourceFilesRead;
    private reportSourceFilesRead;
    private readFiles;
    private normalize;
    private readFile;
}
//# sourceMappingURL=InputFileResolver.d.ts.map